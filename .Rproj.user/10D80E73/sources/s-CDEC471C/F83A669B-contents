---
title: "4-6"
author:
  - XU, Xin
documentclass: ctexart
output:
  rticles::ctex:
    fig_caption: yes
    number_sections: yes
    toc: yes
---

```{r}
library(dplyr)
library(Rcpp)
```

# Data Pre-processing
```{r}
Ratings <- read.csv("archive/Ratings.csv")
Ratings_by_users <- group_by(Ratings, User.ID)
user.Rating <- Ratings_by_users %>% summarise(
  num = length(Book.Rating),
  avg.rating = mean(Book.Rating)
)
num.Rating <- group_by(user.Rating, num) %>% summarise(
  users = length(avg.rating)
)
```

## Getting Training Set and Test Set
```{r eval=FALSE}
train <- NULL
test <- NULL

for(user in user.Rating$User.ID){
  idx <- which(Ratings$User.ID == user)
  n <- length(idx)
  n.train <- ceiling(n*0.7)
  if(length(idx) > 1){
    idx.train <- sample(idx, size = n.train)
    idx.test <- setdiff(idx, idx.train)
    train.aux <- Ratings[idx.train, ]
    test.aux <- Ratings[idx.test, ]
    train <- rbind(train, train.aux)
    test <- rbind(test, test.aux)
  }else{
    train.aux <- Ratings[idx, ]
    train <- rbind(train, train.aux)
  }
}

write.csv(train, file = "train.csv")
write.csv(test, file = "test.csv")
```

## ISBN
```{r}
N <- max(Ratings$User.ID)
book_idx <- unique(Ratings$ISBN)
M <- length(book_idx)
book_idx <- 1:M
names(book_idx) <- unique(Ratings$ISBN)
train <- read.csv("archive/train.csv")
train$ISBN <- book_idx[train$ISBN]
test <- read.csv("archive/test.csv")
test$ISBN <- book_idx[test$ISBN]
```

# lpmf
```{r}
train$Book.Rating <- train$Book.Rating/10
test$Book.Rating <- test$Book.Rating/10
```

```{r}
sourceCpp("cpp/grad_lpmf.cpp")
sourceCpp("cpp/loss_lpmf.cpp")
sourceCpp("cpp/par_lpmf.cpp")
sourceCpp("cpp/pred_lpmf.cpp")
source("R/lpmf_mm.R")
```
```{r}
#set.seed(123)
result <- lpmf_mm(train, 10, c(1e-3, 3, 3), verbose = TRUE, batch = 1e4)
```
